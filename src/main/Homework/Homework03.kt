package main.Homework

class Homework03 {
// 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
val name: String = "Monster Hackaton"

// 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var date: String = "14 ноября 2025"

// 3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var place: String = "Технопарк Академгородка"

// 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная, известная во время расчета затрат)
private val PrivateBudget: String = "подробный отчет от транзакциях, совершенный для организации мероприятия"

// 5. Количество участников (изменяемая публичная переменная, может изменяться за счет отсутсвтия некоторых участников)
var Participants: Int = 0

// 6. Длительность хакатона (публичная неизменяемая переменная, известная с момента планирования мероприятия)
val duration: String = "3 дня"

// 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг. (набор неизменяемых переменных, известных заранее на моменте объявления о прохождении мероприятия)
class InfoLicenseAccord {
    val phoneNumber: String = "+995123123123 Андрей Иванов"
    val reservePhoneNumber: String = "+995789789789 Игорь Вяткин"
    val foodLicense: String = "Тут подробная информация о количестве закупленной еды с поставщиками, адресами, номерами телефонов и прочим"
    val DeviceLicense: String = "Тут подробная информация об арендованной технике, компаниях, номерах телефонов, сроках аренды и прочим"
}

// 8. Текущее состояние хакатона (статус - это публичная изменяемая переменная, которая будет меняться несколько раз по мере прохождения мероприятия)
var status: String = "До старта 2 дня"

// 9. Список спонсоров (неизменяемая переменная, известная во время планирования мероприятия. Список компаний или имен, спонсирующих данное мероприятие)
val Sponcors: String = "Список компаний и/или имен, которые помогли организовать мероприятия с финансовой стороны"

// 10. Бюджет мероприятия (неизменаяемая приватная переменнаятражающая сумму, потраченную на мероприятие, которую организаторы с удовольсвием показывают всем)
private var Budget: Int = 1

// 11. Текущий уровень доступа к интернету (изменяемая переменная, показывающая скорость соединения с интернетом
var IConnection:String = "Inet_Connection"

// 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки. (приватная неизменяемая переменная, содержащая в себе логистическую информацию)
class Logistics {
    val Transport: String = "Информация о единицах транспорта, использованных для проведения мероприятия"
    val Devices: String = "Список оборудования, используемый на мероприятии"
    val StuffRules: String = "Свод правил по коммуникации между персоналом"
    val Resources: String = "Распределение ресурсов внутри команды"
}

// 13. Количество команд (изменяемая переменная, которая будет известна на мероприятии, когда будет известно точное количество участников)
lateinit var TeamCount: String

// 14. Перечень задач (неизменяемая переменная, известная заранее)
val Tasks: String = "Tasks"

// 15. План эвакуации (изменяемая переменная, потому что место проведения может меняться)
var EvacPlan: String = "Evac Plan"

//16. Список доступного оборудования (всё, что выделено для использования на мероприятии, неизменяемая переменная)
val Devices: String="Devices"

// 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками, изменяемая переменная)
var FreeDevices: String = "Free Devices List"

// 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала, неизменяемая переменная, которая будет объявлена позже)
lateinit var FoodSchedule: String

// 19. План мероприятий на случай сбоев (изменяемая переменная, которая известная заранее)
var ExtraEventPlan: String = "ExtraEventPlan"

// 20. Список экспертов и жюри
var ExpertList: String = "ExpertList"

// 21. Политика конфиденциальности
val PrivacyPolicy: String = "Privacy policy"

// 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
lateinit var Feedback: String

// 23. Текущая температура в помещении
var InsideTemperature: String = "Столько-то граудсов цельсия"

// 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
var Analysis: String = "Analysis Data"

// 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
const val speedLimit = 0.5

// 26.Уровень освещения (неизменяемая переменная, потому что известно время восхода и захода солнца в том промежутке времени, когда будет проводиться мероприятия. Сдвиг даты отразится не существенно)
val LightLvl: String = ""

// 27 лог событий мероприятия
lateinit var logs: String

// 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val Medicine: Boolean = true

// 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
val PlansAndProcedures: String by lazy {
 ""
}

// 30. Регистрационный номер мероприятия
val RegisterNumber: String = ""

// 31.Максимально допустимый уровень шума в помещении хакатона.
val NoiseLvlMax: Int = 75

// 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
val MoreThanMaxNoiseLvl: Boolean = true

// 33.План взаимодействия с прессой
var PressPlan: String by lazy {
"" }

// 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
val ProjectDetails: String by lazy {
"" }

// 35. Статус получения всех необходимых разрешений для проведения мероприятия
var PermissionStatus: Boolean = true

// 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
var DeviceAccessDetails: Boolean =true

// 37. Список партнеров мероприятия
var PartnersList: String = ""

// 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
val PhotosAndReports: String = by lazy {
"" }

// 39. Внутренние правила распределения призов
private val PrizesRules: String = ""

// 40. Список разыгрываемых призов
val PrizesList: String = ""

// 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
private val EmergencyContacts: String = ""

// 42. Особые условия для участников с ограниченными возможностями
val SpecialRulesForD: String = ""

// 43. Общее настроение участников (определяется опросами)
lateinit var PartyMood: String = ""

// 44. одробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
val HackatonPlan: String by lazy {
"" }

// 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
var ArtistName: String = ""

// 46. Максимальное количество людей, которое может вместить место проведения.
lateinit var MaxAmountOfPeople: String

// 47. Количество часов, отведенное каждой команде для работы над проектом.
val TimeForProject: Int = 10
}
package main.kotlin.lessons.lesson09


fun findStr (strings: Array<String>, query: String) {
    for(str in strings) {
        if(str.contains(query)) {
            println("Нашел: $str")
            return
        }
    }
    println("Не нашел совпадений")
}
fun main() {

    // Работа с массивами Array
    //Создайте массив из 5 целых чисел и инициализируйте его значениями от 1 до 5.
    val h1: Array<Int> = arrayOf(1, 2, 3, 4, 5)

    //Создайте пустой массив строк размером 10 элементов.
    val h2: Array<Int> = Array(10) { 0 }

    //Создайте массив из 5 элементов типа Double и заполните его значениями, являющимися удвоенным индексом элемента.
    val h3: Array<Double> = arrayOf(0.0, 2.2, 4.4, 6.6, 8.8)

    //Создайте массив из 5 элементов типа Int. Используйте цикл, чтобы присвоить каждому элементу значение, равное его индексу, умноженному на 3.
    val h4: Array<Int> = arrayOf(1, 2, 3, 4, 5)
    for(i in h4) {
        h4[i] = ([i] * 3)
    }

    //Создайте массив из 3 nullable строк. Инициализируйте его одним null значением и двумя строками.
    val h5: Array<?String> = arrayOf(null, "", "")

    //Создайте массив целых чисел и скопируйте его в новый массив в цикле.
    val h6: Array<Int> = arrayOf(1, 2, 3)
    val c1: Array<Int> = Array(h6.size)

    for(i in h6.indices) {
        c1[i] = h6[i]
    }

    //Создайте два массива целых чисел одинаковой длины. Создайте третий массив, вычев значения одного из другого. Распечатайте полученные значения.
    val h7: Array<Int> = arrayOf(1, 2, 3 ,4 ,5)
    val h8: Array<Int> = arrayOf(6, 7, 8, 9, 10)
    val c2: Array<Int> = Array(h7.size)

    for (i in h7.indices) {
        c2[i] = h8[i] - h7[i]
    }
    println(c2)

    //Создайте массив целых чисел. Найдите индекс элемента со значением 5. Если значения 5 нет в массиве, печатаем -1. Реши задачу через цикл while.
    val h9: Array<Int> = arrayOf(1, 2, 3, 4, 5)
    while(i in h9.indices) {
        i == 5 -> println(h9[i])

    }

    //Создайте массив целых чисел. Используйте цикл для перебора массива и вывода каждого элемента в консоль. Напротив каждого элемента должно быть написано “чётное” или “нечётное”.
    val h10: Array<Int> = arrayOf(1, 2, 3 ,4, 5)
    for(i in h10) {
        h10[i] % 2 == 0
        println(h10[i] + "Четное")
    } else println(h10[i] + "Нечетное")

//Создай функцию, которая принимает массив строк и строку для поиска. Функция должна находить в массиве элемент, в котором принятая строка является подстрокой (метод contains()). Распечатай найденный элемент.
    val h11: Array<String> = arrayOf("Машина", "Велосипед", "Самокат")
    findStr(h11, "осипе")


//Работа со списками List
//Создайте пустой неизменяемый список целых чисел.
    val l1: List<Int> = listOf()

    //Создайте неизменяемый список строк, содержащий три элемента (например, "Hello", "World", "Kotlin").
    val l2: List<String> = listOf("Hello", "World", "Kotlin")

    //Создайте изменяемый список целых чисел и инициализируйте его значениями от 1 до 5.
    val l3: MutableList<Int> = mutableListOf(1, 2, 3, 4, 5)

    //Имея изменяемый список целых чисел, добавьте в него новые элементы (например, 6, 7, 8).
    l3.add(6)
    l3.add(7)
    l3.add(8)

    //Имея изменяемый список строк, удалите из него определенный элемент (например, "World").
    val l4: MutableList<String> = mutableListOf("Hello", "World", "Ololo")
    l4.remove("Hello")

    //Создайте список целых чисел и используйте цикл для вывода каждого элемента на экран.
    val l5: List<Int> = listOf(1, 2, 3 ,4 ,5)
    for(i in l5) {
        println(i)
    }

    //Создайте список строк и получите из него второй элемент, используя его индекс.
    val l6: List<String> = listOf("L", "I", "ST")
    for(i in l6){
        if(i = 2) {
            println(l6[i])
        }
    }

    //Имея изменяемый список чисел, измените значение элемента на определенной позиции (например, замените элемент с индексом 2 на новое значение).
    l4[2] = "Privet"

    //Создайте два списка строк и объедините их в один новый список, содержащий элементы обоих списков. Реши задачу с помощью циклов.
    val l7: List<Int> = listOf(1, 3, 5)
    val l8: List<Int> = listOf(2, 4, 6)
    val l9: MutableList<Int> = mutableListOf()
    for(i in l7) {
        l9.add(i)
    }
    for(i in l8) {
        l9.add(i)
    }

    //Создайте список целых чисел и найдите в нем минимальный и максимальный элементы используя цикл.
    val l10: List<Int> = listOf(1, 2, 3, 4, 5)
    var min = l10[0]
    var max = l10[0]
    for(i in l10) {
        if(i < min) min = i
        if(i > max) max = i
    }
    println(min)
    println(max)

    //Имея список целых чисел, создайте новый список, содержащий только четные числа из исходного списка используя цикл. На примере l10
    val l11: MutableList<Int> = mutableListOf()
    for(i in l10) {
        if(l10[i] % 2 == 0)
            l11.add(l10[i])
    } else {
        println("Ошибка")
    }

    //Работа с Множествами Set
    //Создайте пустое неизменяемое множество целых чисел.
    val s1: Set<Int> = setOf()

    //Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).
    val s2: Set<Int> = setOf(1, 2, 3)

    //Создайте изменяемое множество строк и инициализируйте его несколькими значениями (например, "Kotlin", "Java", "Scala").
    val s3: MutableSet<String> = mutableSetOf("Kotlin", "Java", "Scala")

    //Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").
    s3.add("Swift")
    s3.add("Go")

    //Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).
    val s4: MutableSet<Int> = mutableSetOf(1, 2, 3, 4, 5)
    s4.remove(2)

    //Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.
    val s5: Set<Int> = setOf(1, 2, 3, 4, 5)
    for(i in s5) {
        println(i)
    }

    //Создай функцию, которая принимает множество строк (set) и строку и проверяет, есть ли в множестве указанная строка. Нужно вернуть булево значение true если строка есть. Реши задачу через цикл.

    //Создайте множество строк и конвертируйте его в изменяемый список строк с использованием цикла.
    val s6: Set<String> = setOf("It", "Is", "Set", "Of", "Strings")
    val s7: MutableList<String> = mutableListOf()

    for(i in s6) {
        s7[i] = s6[i]
    }


}